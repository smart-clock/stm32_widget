/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CLOCKVIEWBASE_HPP
#define CLOCKVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/clock_screen/ClockPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/Graph.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/alarmContainer.hpp>
#include <gui/containers/alarmCenterContainer.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <touchgfx/containers/ModalWindow.hpp>

class ClockViewBase : public touchgfx::View<ClockPresenter>
{
public:
    ClockViewBase();
    virtual ~ClockViewBase();
    virtual void setupScreen();

    virtual void hourScrollWheelUpdateItem(alarmContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Clock
    }

    virtual void hourScrollWheelUpdateCenterItem(alarmCenterContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Clock
    }

    virtual void minuteScrollWheelUpdateItem(alarmContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Clock
    }

    virtual void minuteScrollWheelUpdateCenterItem(alarmCenterContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Clock
    }

    /*
     * Virtual Action Handlers
     */
    virtual void buttonPlayClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void buttonStopClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void buttonResetClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void buttonTimerMaxClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void bottonTimerMinClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void toggleButtonOn()
    {
        // Override and implement this function in Clock
    }
    virtual void toggleButtonAm()
    {
        // Override and implement this function in Clock
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background1;
    touchgfx::Image background2;
    touchgfx::Image background3;
    touchgfx::SwipeContainer swipeContainerWidget;
    touchgfx::Container home;
    touchgfx::TextAreaWithTwoWildcards textHomeClock;
    touchgfx::TextAreaWithOneWildcard textHomeSec;
    touchgfx::TextAreaWithTwoWildcards textHomeDate;
    touchgfx::TextAreaWithOneWildcard textHomeDay;
    touchgfx::Button buttonSetting;
    touchgfx::Button buttonDebugIn;
    touchgfx::Container whether;
    touchgfx::Box boxBlurWhether;
    touchgfx::TextAreaWithOneWildcard textTemp;
    touchgfx::TextArea textDegree;
    touchgfx::TextArea textC;
    touchgfx::TextArea textWhether;
    touchgfx::TextAreaWithOneWildcard textRegion;
    touchgfx::TextAreaWithOneWildcard textWeather;
    touchgfx::Image imageSnow;
    touchgfx::Image imageRain;
    touchgfx::Image imageDrizzel;
    touchgfx::Image imageThunder;
    touchgfx::Image imageFog;
    touchgfx::Image imageClear;
    touchgfx::Image imageCloud;
    touchgfx::Image imageLocation;
    touchgfx::Container Bus;
    touchgfx::Box boxBlurBus;
    touchgfx::TextAreaWithOneWildcard busRoute;
    touchgfx::TextAreaWithOneWildcard busStation;
    touchgfx::TextAreaWithOneWildcard busTime1;
    touchgfx::TextAreaWithOneWildcard busTime2;
    touchgfx::Image imageBus1;
    touchgfx::Image imageBus2;
    touchgfx::Container stock;
    touchgfx::Box boxBlurStock;
    touchgfx::TextAreaWithOneWildcard textStock;
    touchgfx::TextAreaWithOneWildcard textStockValue;
    touchgfx::TextArea textStock1ww;
    touchgfx::TextArea textStock1w;
    touchgfx::GraphWrapAndClear<22> dynamicStockGraph;
    touchgfx::GraphElementGridY dynamicStockGraphMajorYAxisGrid;
    touchgfx::GraphLabelsY dynamicStockGraphMajorYAxisLabel;
    touchgfx::GraphElementLine dynamicStockGraphLine1;
    touchgfx::PainterRGB565 dynamicStockGraphLine1Painter;
    touchgfx::GraphElementArea dynamicStockGraphArea1;
    touchgfx::PainterRGB565 dynamicStockGraphArea1Painter;
    touchgfx::Draggable< touchgfx::Graph<22> > graphStock;
    touchgfx::GraphElementLine graphStockLine1;
    touchgfx::PainterRGB565 graphStockLine1Painter;
    touchgfx::GraphElementArea graphStockArea1;
    touchgfx::PainterRGB565 graphStockArea1Painter;
    touchgfx::Container StopWatch;
    touchgfx::Box boxBlurStop;
    touchgfx::DigitalClock digitalClock;
    touchgfx::Button buttonReset;
    touchgfx::Button buttonStop;
    touchgfx::Button buttonPlay;
    touchgfx::Container Timer;
    touchgfx::Box boxBlurTimer;
    touchgfx::Button buttonTimerMax;
    touchgfx::Button buttonTimerMin;
    touchgfx::Circle circleGaugeBackground;
    touchgfx::PainterRGB565 circleGaugeBackgroundPainter;
    touchgfx::ClickListener< touchgfx::Gauge > gaugeTimer;
    touchgfx::PainterRGB565 gaugeTimerPainter;
    touchgfx::TextAreaWithTwoWildcards textTimer;
    touchgfx::Container Alarm;
    touchgfx::Box boxBlurAlarm;
    touchgfx::ScrollWheelWithSelectionStyle hourScrollWheel;
    touchgfx::DrawableListItems<alarmContainer, 4> hourScrollWheelListItems;
    touchgfx::DrawableListItems<alarmCenterContainer, 2> hourScrollWheelSelectedListItems;
    touchgfx::ScrollWheelWithSelectionStyle minuteScrollWheel;
    touchgfx::DrawableListItems<alarmContainer, 4> minuteScrollWheelListItems;
    touchgfx::DrawableListItems<alarmCenterContainer, 2> minuteScrollWheelSelectedListItems;
    touchgfx::ToggleButton toggleButtonON;
    touchgfx::ToggleButton toggleButtonAM;
    touchgfx::TextArea textAreaON;
    touchgfx::TextArea textAreaAM;
    touchgfx::TextArea textAreaColon;
    touchgfx::Container calendar;
    touchgfx::Box boxBlurCal;
    touchgfx::ScrollList scrollList1;
    touchgfx::Box boxScheduleBack;
    touchgfx::TextArea textScheduleTime;
    touchgfx::TextArea textSchedule;
    touchgfx::Box boxInfoBG;
    touchgfx::TextAreaWithOneWildcard textBattery;
    touchgfx::TextAreaWithTwoWildcards textClockUpper;
    touchgfx::TextAreaWithOneWildcard textDayUpper;
    touchgfx::TextAreaWithTwoWildcards textAlarm;
    touchgfx::TextAreaWithOneWildcard textAlarmAMPM;
    touchgfx::TextAreaWithOneWildcard textAlarmAMPM_1;
    touchgfx::Image imageAlarmOff;
    touchgfx::Image imageAlarmOn;
    touchgfx::ModalWindow modalWindowSetting;
    touchgfx::TextAreaWithOneWildcard textAreaIP;
    touchgfx::TextAreaWithOneWildcard textAreaWiFi;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::Button buttonClock;
    touchgfx::ModalWindow modalWindowDebug;
    touchgfx::TextAreaWithOneWildcard textAreaPacket;
    touchgfx::Button buttonDebugOut;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTHOMECLOCKBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHomeClockBuffer1[TEXTHOMECLOCKBUFFER1_SIZE];
    static const uint16_t TEXTHOMECLOCKBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHomeClockBuffer2[TEXTHOMECLOCKBUFFER2_SIZE];
    static const uint16_t TEXTHOMESEC_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHomeSecBuffer[TEXTHOMESEC_SIZE];
    static const uint16_t TEXTHOMEDATEBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHomeDateBuffer1[TEXTHOMEDATEBUFFER1_SIZE];
    static const uint16_t TEXTHOMEDATEBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHomeDateBuffer2[TEXTHOMEDATEBUFFER2_SIZE];
    static const uint16_t TEXTHOMEDAY_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textHomeDayBuffer[TEXTHOMEDAY_SIZE];
    static const uint16_t TEXTTEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textTempBuffer[TEXTTEMP_SIZE];
    static const uint16_t TEXTREGION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textRegionBuffer[TEXTREGION_SIZE];
    static const uint16_t TEXTWEATHER_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textWeatherBuffer[TEXTWEATHER_SIZE];
    static const uint16_t BUSROUTE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar busRouteBuffer[BUSROUTE_SIZE];
    static const uint16_t BUSSTATION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar busStationBuffer[BUSSTATION_SIZE];
    static const uint16_t BUSTIME1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar busTime1Buffer[BUSTIME1_SIZE];
    static const uint16_t BUSTIME2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar busTime2Buffer[BUSTIME2_SIZE];
    static const uint16_t TEXTSTOCK_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textStockBuffer[TEXTSTOCK_SIZE];
    static const uint16_t TEXTSTOCKVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textStockValueBuffer[TEXTSTOCKVALUE_SIZE];
    static const uint16_t TEXTTIMERBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textTimerBuffer1[TEXTTIMERBUFFER1_SIZE];
    static const uint16_t TEXTTIMERBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textTimerBuffer2[TEXTTIMERBUFFER2_SIZE];
    static const uint16_t TEXTBATTERY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textBatteryBuffer[TEXTBATTERY_SIZE];
    static const uint16_t TEXTCLOCKUPPERBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textClockUpperBuffer1[TEXTCLOCKUPPERBUFFER1_SIZE];
    static const uint16_t TEXTCLOCKUPPERBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textClockUpperBuffer2[TEXTCLOCKUPPERBUFFER2_SIZE];
    static const uint16_t TEXTDAYUPPER_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textDayUpperBuffer[TEXTDAYUPPER_SIZE];
    static const uint16_t TEXTALARMBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAlarmBuffer1[TEXTALARMBUFFER1_SIZE];
    static const uint16_t TEXTALARMBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAlarmBuffer2[TEXTALARMBUFFER2_SIZE];
    static const uint16_t TEXTALARMAMPM_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textAlarmAMPMBuffer[TEXTALARMAMPM_SIZE];
    static const uint16_t TEXTALARMAMPM_1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textAlarmAMPM_1Buffer[TEXTALARMAMPM_1_SIZE];
    static const uint16_t TEXTAREAIP_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaIPBuffer[TEXTAREAIP_SIZE];
    static const uint16_t TEXTAREAWIFI_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaWiFiBuffer[TEXTAREAWIFI_SIZE];
    static const uint16_t TEXTAREAPACKET_SIZE = 257;
    touchgfx::Unicode::UnicodeChar textAreaPacketBuffer[TEXTAREAPACKET_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ClockViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<ClockViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CLOCKVIEWBASE_HPP
