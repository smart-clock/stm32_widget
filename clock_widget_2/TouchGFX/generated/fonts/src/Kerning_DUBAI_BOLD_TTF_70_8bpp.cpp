#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_DUBAI_BOLD_TTF_70_8bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0031, one], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0032, two], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0033, three], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0034, four], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0035, five], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0038, eight], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, t], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003F, question], Kerning dist = 1)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x0043, C], Kerning dist = 2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0065, e], Kerning dist = -1)
    { 0x003A,  1 },  // (First char = [0x003A, colon], Second char = [0x0074, t], Kerning dist = 1)
    { 0x003F,  1 },  // (First char = [0x003F, question], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0074, t], Kerning dist = -1)
    { 0x003A,  1 },  // (First char = [0x003A, colon], Second char = [0x0077, w], Kerning dist = 1)
    { 0x003F,  1 },  // (First char = [0x003F, question], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0077, w], Kerning dist = -1)
    { 0x003F,  1 },  // (First char = [0x003F, question], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0079, y], Kerning dist = -1)
};
