/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ROBOTTHEMEVIEWBASE_HPP
#define ROBOTTHEMEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/robottheme_screen/robotThemePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/VideoWidget.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class robotThemeViewBase : public touchgfx::View<robotThemePresenter>
{
public:
    robotThemeViewBase();
    virtual ~robotThemeViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void function1()
    {
        // Override and implement this function in robotTheme
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container homePage1;
    touchgfx::VideoWidget videoSad;
    touchgfx::VideoWidget videoHeart;
    touchgfx::VideoWidget videoHappy;
    touchgfx::VideoWidget videoConfused;
    touchgfx::VideoWidget videoBored;
    touchgfx::VideoWidget videoBlink;
    touchgfx::VideoWidget videoDaily;
    touchgfx::VideoWidget videoAngry;
    touchgfx::Container swipeContainer1Page6;
    touchgfx::Container swipeContainer1Page5;
    touchgfx::Container swipeContainer1Page4;
    touchgfx::Container swipeContainer1Page3;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::Container swipeContainer1Page1;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextAreaWithTwoWildcards textClock;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTCLOCKBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textClockBuffer1[TEXTCLOCKBUFFER1_SIZE];
    static const uint16_t TEXTCLOCKBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textClockBuffer2[TEXTCLOCKBUFFER2_SIZE];

private:

};

#endif // ROBOTTHEMEVIEWBASE_HPP
